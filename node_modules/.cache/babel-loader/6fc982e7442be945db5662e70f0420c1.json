{"ast":null,"code":"import _classCallCheck from \"/Users/mike/Documents/Projects/robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mike/Documents/Projects/robofriends/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mike/Documents/Projects/robofriends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mike/Documents/Projects/robofriends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mike/Documents/Projects/robofriends/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mike/Documents/Projects/robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport { setSearchField, requestRobots } from '../actions';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSearchChange: function onSearchChange(event) {\n      return dispatch(setSearchField(event.target.value));\n    },\n    onRequestRobots: function onRequestRobots() {\n      return dispatch(requestRobots());\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      robots: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onRequestRobots();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var robots = this.state.robots;\n      var _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange;\n      var filteredRobots = robots.filter(function (robot) {\n        return robot.name.toLowerCase().includes(searchField.toLowerCase());\n      });\n      return !robots.length ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Loading\") : React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"f1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"RoboFriends\"), React.createElement(SearchBox, {\n        searchChange: onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        robots: filteredRobots,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/mike/Documents/Projects/robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","setSearchField","requestRobots","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","props","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,WAAP;AACA,SAAQC,cAAR,EAAwBC,aAAxB,QAA4C,YAA5C;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD3B;AAELE,IAAAA,MAAM,EAAEH,KAAK,CAACF,aAAN,CAAoBK,MAFvB;AAGLC,IAAAA,SAAS,EAAEJ,KAAK,CAACF,aAAN,CAAoBM,SAH1B;AAILC,IAAAA,KAAK,EAAEL,KAAK,CAACF,aAAN,CAAoBO;AAJtB,GAAP;AAMD,CAPD;;AASA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLC,IAAAA,cAAc,EAAE,wBAACC,KAAD;AAAA,aAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAAnB;AAAA,KADX;AAELC,IAAAA,eAAe,EAAE;AAAA,aAAML,QAAQ,CAACT,aAAa,EAAd,CAAd;AAAA;AAFZ,GAAP;AAID,CALD;;IAOMe,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKb,KAAL,GAAa;AACXG,MAAAA,MAAM,EAAE;AADG,KAAb;AAFY;AAKb;;;;wCAEmB;AAClB,WAAKW,KAAL,CAAWF,eAAX;AACD;;;6BAEQ;AAAA,UACCT,MADD,GACY,KAAKH,KADjB,CACCG,MADD;AAAA,wBAEgC,KAAKW,KAFrC;AAAA,UAECb,WAFD,eAECA,WAFD;AAAA,UAEcO,cAFd,eAEcA,cAFd;AAGP,UAAMO,cAAc,GAAGZ,MAAM,CAACa,MAAP,CAAc,UAAAC,KAAK,EAAG;AAC3C,eAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCnB,WAAW,CAACkB,WAAZ,EAAlC,CAAP;AACD,OAFsB,CAAvB;AAGA,aAAO,CAAChB,MAAM,CAACkB,MAAR,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADK,GAGH;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAEb,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEO,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,CAHJ;AAWD;;;;EA7BevB,S;;AAgClB,eAAeC,OAAO,CAACM,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect} from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport {setSearchField, requestRobots} from '../actions'\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n    }\n  }\n\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { robots } = this.state;\n    const { searchField, onSearchChange} = this.props;\n    const filteredRobots = robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return !robots.length ?\n      <h1>Loading</h1> :\n      (\n        <div className='tc'>\n          <h1 className='f1'>RoboFriends</h1>\n          <SearchBox searchChange={onSearchChange}/>\n          <Scroll>\n            <CardList robots={filteredRobots} />\n          </Scroll>\n        </div>\n      );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n"]},"metadata":{},"sourceType":"module"}